<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Alakazam_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization

image_speed = 0.2;
scale = 1.2;
image_xscale = scale;
image_yscale = scale;
vsp = 0;
hsp = 0;
grav = 0.2;
jump_speed = 6;
move_speed = 4;
jump = 2;
direction = 0;

//Not Initialized

input_left = 0;
input_right = 0;
input_jump = 0;
input_atk = 0;
input_sp = 0;
atk_anim = 0;
atk_count = 0;
atk_number = 0;
atk_sp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input Check
if(global.Begin_P1)
{
    input_left = -keyboard_check(ord("A"));
    input_right = keyboard_check(ord("D"));
    input_jump = keyboard_check_pressed(ord("W"));
    input_sp = keyboard_check_pressed(vk_space);
    input_atk = keyboard_check_pressed(ord("Q"));
    if(input_atk)
    {
        with instance_create(x,y,Obj_Alakazam_P1_Hit)
        {
            image_xscale = Obj_Alakazam_P1.image_xscale;
        }
    }
}

if(input_left==-1)
direction = 180;
else if(input_right)
direction = 0;
if(keyboard_check_pressed(vk_escape))
game_end();

if(keyboard_check_pressed(ord("R")))
game_restart();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input Action

if(vsp &lt; 10) vsp+=grav;

if(place_meeting(x,y+1,Obj_Floor))
{
    vsp = input_jump * -jump_speed;
}

if(input_sp)
{
    if(global.P1Count==0)
    {
         if(image_index = 6)
        {
            thing = instance_create(x+50,y,Obj_Psy);
            thing.PlayerCode = 0;
            if(direction==180)
            { 
                thing.image_xscale = -1;
                thing.x -= 100;
            }
            
            thing.direction = direction;
            thing.speed = 6;
            global.P1Count = 1;
            global.Begin_P1 = 0;
            input_sp = 0;
            atk_sp = 1;
        }
        
        
    }

}
else if(input_atk)
{
    input_left = -1;
    input_right = 1;
    global.Begin_P1 = 0;   
    direction = 0;
}
move = input_right + input_left;
hsp = move * move_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
//Horizontal
if(place_meeting(x+hsp,y,Obj_Wall))
{
    while(!place_meeting(x+sign(hsp),y,Obj_Wall))
    {
        x += sign(hsp);
    }
hsp = 0;
}
x += hsp;

//Vertical
if(place_meeting(x,y+vsp,Obj_Floor))
{
    while(!place_meeting(x,y+sign(vsp),Obj_Floor))
    {
        y += sign(vsp);
    }
vsp = 0;
}
y+= vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate

    if(move==-1)
    {
        sprite_index = Sp_Alakazam_Walk;
        image_xscale = -scale;
    }
    else if (move)
    {
        sprite_index = Sp_Alakazam_Walk;
        image_xscale = scale;
    }
    else if (input_sp || atk_sp)
    {
        sprite_index = Sp_Alakazam_Sp;
        global.Begin_P1 = 0;
        if(atk_number = 0) image_index=0;
        atk_number++;
        if(image_index &gt; image_number - 1)
        {
            global.Begin_P1 = 1;
            atk_number = 0;
            atk_sp = 0;
        }
    }
    else if (input_atk)
    {
        sprite_index = Sp_Alakazam_Atk;
        if(atk_number = 0) image_index=0;
        atk_number++;
        if(image_index &gt; image_number - 1)
        {
            global.Begin_P1 = 1;
            atk_number = 0;
        }
    }
    else 
    {
        sprite_index = Sp_Alakazam_Idle;
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
